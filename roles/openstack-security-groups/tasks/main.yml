---
- name: "Set OpenStack Security Group Facts"
  set_fact:
    openshift_openstack_security_groups: "{{ openshift_openstack_security_groups | default(default_openshift_openstack_security_groups) }}"

- name: "Determine security group for master"
  set_fact:
    security_groups_master: "{{ item.name }}"
  when: "'{{ item.type }}' == 'master'"
  with_items: "{{ security_groups }}"

- name: "Set security groups for master if found"
  set_fact:
      security_groups_master: "{{ ['default',security_groups_master | default('')] | join(',') }}"
  when:
    - security_groups_master is defined
    - security_groups_master is not none
    - security_groups_master|trim != ''

- name: "Set security groups for master not found"
  set_fact:
      security_groups_master: "default"
  when: security_groups_master is undefined

- name: "Determine security group for node"
  set_fact:
    security_groups_node: "{{ item.name }}"
  when: "'{{ item.type }}' == 'node'"
  with_items: "{{ security_groups }}"

- name: "Set security groups for node if found"
  set_fact:
      security_groups_node: "{{ ['default',security_groups_node | default('')] | join(',') }}"
  when:
    - security_groups_node is defined
    - security_groups_node is not none
    - security_groups_node|trim != ''

- name: "Set security groups for node not found"
  set_fact:
      security_groups_node: "default"
  when: security_groups_node is undefined

- name: "Determine security group for dns"
  set_fact:
    security_groups_dns: "{{ item.name }}"
  when: "'{{ item.type }}' == 'dns'"
  with_items: "{{ security_groups }}"

- name: "Set security groups for dns if found"
  set_fact:
      security_groups_dns: "{{ ['default',security_groups_dns | default('')] | join(',') }}"
  when:
    - security_groups_dns is defined
    - security_groups_dns is not none
    - security_groups_dns|trim != ''

- name: "Set security groups for dns not found"
  set_fact:
      security_groups_dns: "default"
  when: security_groups_dns is undefined

- name: "Determine security group for nfs"
  set_fact:
    security_groups_nfs: "{{ item.name }}"
  when: "'{{ item.type }}' == 'nfs'"
  with_items: "{{ security_groups }}"

- name: "Set security groups for nfs if found"
  set_fact:
      security_groups_nfs: "{{ ['default',security_groups_nfs | default('')] | join(',') }}"
  when:
    - security_groups_nfs is defined
    - security_groups_nfs is not none
    - security_groups_nfs|trim != ''

- name: "Set security groups for nfs not found"
  set_fact:
      security_groups_nfs: "default"
  when: security_groups_nfs is undefined

- debug:
    var: "{{ 'security_groups_' + item }}"
  with_items:
    - master
    - node
    - dns
    - nfs

- name: "Create Security Groups if required"
  os_security_group:
    name: "{{ item.name }}"
    state: present
  with_items: "{{ security_groups }}"

- name: "Create SSH Rule in matching Security Group if required"
  os_security_group_rule:
    security_group: "{{ item.0.name }}"
    protocol: "{{ item.1.protocol }}"
    port_range_min: "{{ item.1.from_port }}"
    port_range_max: "{{ item.1.to_port }}"
    remote_ip_prefix: "{{ item.1.cidr }}"
  when: item.1.name is defined
  with_subelements:
    - "{{ security_groups }}"
    - rules
